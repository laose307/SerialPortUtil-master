apply plugin: 'com.android.library'
//推荐放在module的gradle依赖文件的开头
apply plugin: 'com.novoda.bintray-release'

publish {
    userOrg = 'laose'
//    repoName = 'android'
    groupId = 'com.laose'
    artifactId = 'serialport'
    publishVersion = '0.0.6'
    uploadName = 'SerialPort'
    desc = 'android '
    website = 'https://gitee.com/soft_kcd/SerialPortUtil-master'
}
//推荐放在module的gradle依赖文件的最后面
//publish {
//    //userOrg这个是用户的组织，我们创建的是个人帐号，也就是我们的用户名（后续会介绍，必须一致，改成你自己的bintrayName）
//    userOrg = 'laose'
//    //我们的组id 类比'com.github.bumptech.glide:glide:3.7.0' 中的 com.github.bumptech.glide 这一部分
//    groupId = 'com.laose'
//    //原型id 类比'com.github.bumptech.glide:glide:3.7.0' 中的glide这一部分
//    artifactId = 'SerialPort'
//    //版本号 类比'com.github.bumptech.glide:glide:3.7.0' 中的3.7.0 这一部分。很重要，我们在更新aar文件的时候需要提升版本号，类似更新apk
//    publishVersion = '0.0.1'
//    //描述，大致介绍自己的类库
//    desc = 'android 系统跟串口交互'
//    //网址，可以写自己的github项目页面等
//    website = 'https://gitee.com/soft_kcd/SerialPortUtil-master'
//
//}
android {
    compileSdkVersion 25
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    tasks.withType(JavaCompile) {
        options.encoding = "utf-8"
    }

    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        options.encoding = "UTF-8"
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }
    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jni.srcDirs = [] //禁止使用默认的ndk编译系统
            jniLibs.srcDirs 'libs' //so存放地方
        }
    }

}




dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:25.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
